CREATE database pwin;


CREATE SCHEMA greyhound;


CREATE TABLE GREYHOUND.RAW_RACING_INFORMATION (

DATE_RACING		VARCHAR(20)		NOT NULL,
TIME_RACING		VARCHAR(10) 	NOT NULL,
LOCAL_RACING	VARCHAR(80)		NOT NULL,
ORDER_RACING	VARCHAR(10) 	NOT NULL,
GRADE_RACING	VARCHAR(10) 	NOT NULL,
DISTANCE_RACING	VARCHAR(10) 	NOT NULL,
URL_RACING      VARCHAR(1000)   NOT NULL,

TRAP			INTEGER,
POSITION		INTEGER,
NAME			VARCHAR(100),
AGE				NUMERIC(4,2),
WEIGHT 			NUMERIC(6,2),
BEND			VARCHAR(10),
TIME_			NUMERIC(6,2),
SPLIT			NUMERIC(6,2),
START_ODD       NUMERIC(6,2)
);






CREATE OR REPLACE VIEW GREYHOUND.V_URL_INFORMATION AS
WITH CALCULATE_UNIT_BEND AS (
SELECT URL_RACING
	,NAME
	,regexp_split_to_table(replace(BEND,'-',''), '') AS UNIT_BEND
FROM GREYHOUND.RAW_RACING_INFORMATION
)
,CONVERT_BEND_TO_INT AS (
SELECT *
	,CASE WHEN UNIT_BEND = '' THEN NULL ELSE UNIT_BEND::INT END UNIT_BEND_INT
FROM CALCULATE_UNIT_BEND
)
,CACULATE_DISTANCE_TO_OPTIMUM AS (
SELECT *
	,UNIT_BEND_INT - 1 AS DISTANCE_OPTIMUM_POSITION
FROM CONVERT_BEND_TO_INT
)
,CALCULATE_BEND AS (
SELECT URL_RACING
	,NAME
	,AVG(DISTANCE_OPTIMUM_POSITION) AS AVG_DISTANCE_OPTIMUM
FROM CACULATE_DISTANCE_TO_OPTIMUM
GROUP BY 1,2
)
SELECT A.NAME
	,A.URL_RACING
	,TO_DATE(DATE_RACING,'DD-MM-YYYY') AS DT_RACING
	,CAST(REPLACE(DISTANCE_RACING,'m','') AS NUMERIC)*1 AS DISTANCE_RACING_M
	,TIME_
	,(3.6) * CAST(REPLACE(DISTANCE_RACING,'m','') AS NUMERIC) *1 / TIME_ AS VELOCITY_KMH
	,WEIGHT
	,TRAP
	,POSITION
	,SPLIT
	,B.AVG_DISTANCE_OPTIMUM AS AVG_BEND
FROM GREYHOUND.RAW_RACING_INFORMATION A
	LEFT JOIN CALCULATE_BEND B ON A.URL_RACING = B.URL_RACING AND A.NAME = B.NAME
ORDER BY 1,2 DESC;








CREATE OR REPLACE VIEW GREYHOUND.V_PREVIOUS_DATA AS
WITH LAST_URL_RACING AS (
SELECT *
	,LAG(URL_RACING,1) OVER(PARTITION BY NAME ORDER BY DT_RACING) AS LAST1_RACING
	,LAG(URL_RACING,2) OVER(PARTITION BY NAME ORDER BY DT_RACING) AS LAST2_RACING
	,LAG(URL_RACING,3) OVER(PARTITION BY NAME ORDER BY DT_RACING) AS LAST3_RACING
FROM GREYHOUND.V_URL_INFORMATION
ORDER BY 1,2 DESC
)
SELECT A.URL_RACING
	,A.DT_RACING
	,A.NAME
	,A.VELOCITY_KMH AS VELOCITY0
	,A.TRAP AS TRAP0
	,A.POSITION AS POSITION0
	,A.SPLIT AS SPLIT0
	,A.AVG_BEND AS  AVG_BEND0
	,A.DISTANCE_RACING_M AS DISTANCE0
	,A.WEIGHT AS WEIGHT0
	--LAST1 RACING
	-- ============
	,B.VELOCITY_KMH AS VELOCITY1
	,B.TRAP AS TRAP1
	,B.POSITION AS POSITION1
	,B.SPLIT AS SPLIT1
	,B.AVG_BEND AS AVG_BEND1
	,B.DISTANCE_RACING_M AS DISTANCE1
	,B.WEIGHT AS WEIGHT1
	--LAST2 RACING
	-- ===============
	,C.VELOCITY_KMH AS VELOCITY2
	,C.TRAP AS TRAP2
	,C.POSITION AS POSITION2
	,C.SPLIT AS SPLIT2
	,C.AVG_BEND AS AVG_BEND2
	,C.DISTANCE_RACING_M AS DISTANCE2
	,C.WEIGHT AS WEIGHT2
	--LAST3 RACING
	--====================
	,D.VELOCITY_KMH AS VELOCITY3
	,D.TRAP AS TRAP3
	,D.POSITION AS POSITION3
	,D.SPLIT AS SPLIT3
	,D.AVG_BEND AS AVG_BEND3
	,D.DISTANCE_RACING_M AS DISTANCE3
	,D.WEIGHT AS WEIGHT3
FROM LAST_URL_RACING A
	LEFT JOIN GREYHOUND.V_URL_INFORMATION B ON A.NAME = B.NAME AND A.LAST1_RACING = B.URL_RACING
	LEFT JOIN GREYHOUND.V_URL_INFORMATION C ON A.NAME = C.NAME AND A.LAST2_RACING = C.URL_RACING
	LEFT JOIN GREYHOUND.V_URL_INFORMATION D ON A.NAME = D.NAME AND A.LAST3_RACING = D.URL_RACING
ORDER BY 2 DESC,1
;







CREATE OR REPLACE VIEW GREYHOUND.V_URL_MODEL AS
WITH CALCULATE_NULL_VELOCITY AS (
SELECT URL_RACING
	,SUM(CASE WHEN VELOCITY0 IS NULL THEN 0 ELSE 1 END) AS QTE_VELOCITY0_DATA
	,SUM(CASE WHEN VELOCITY1 IS NULL THEN 0 ELSE 1 END) AS QTE_VELOCITY1_DATA
	,SUM(CASE WHEN VELOCITY2 IS NULL THEN 0 ELSE 1 END) AS QTE_VELOCITY2_DATA
	,SUM(CASE WHEN VELOCITY3 IS NULL THEN 0 ELSE 1 END) AS QTE_VELOCITY3_DATA
FROM GREYHOUND.V_PREVIOUS_DATA
GROUP BY 1
)
SELECT *
FROM CALCULATE_NULL_VELOCITY
WHERE 1=1
	AND QTE_VELOCITY0_DATA >=3
	AND QTE_VELOCITY1_DATA >=3
	AND QTE_VELOCITY2_DATA >=3
	AND QTE_VELOCITY3_DATA >=3
;



CREATE OR REPLACE VIEW GREYHOUND.V_ODD_INFORMATION AS
SELECT url_racing
	,SUM(CASE WHEN TRAP=1 THEN start_odd ELSE 0 END) start_odd_1
	,SUM(CASE WHEN TRAP=2 THEN start_odd ELSE 0 END) start_odd_2
	,SUM(CASE WHEN TRAP=3 THEN start_odd ELSE 0 END) start_odd_3
	,SUM(CASE WHEN TRAP=4 THEN start_odd ELSE 0 END) start_odd_4
	,SUM(CASE WHEN TRAP=5 THEN start_odd ELSE 0 END) start_odd_5
	,SUM(CASE WHEN TRAP=6 THEN start_odd ELSE 0 END) start_odd_6
FROM GREYHOUND.RAW_RACING_INFORMATION
GROUP BY URL_RACING;





CREATE OR REPLACE VIEW GREYHOUND.V_DATA_TRAINING_MODEL AS
WITH TRAP1 AS (
SELECT URL_RACING
	,TRAP0 		AS TRAP0_1
	,VELOCITY0 		AS VELOCITY0_1
	,POSITION0		AS POSITION0_1
	,SPLIT0		AS SPLIT0_1
	,AVG_BEND0		AS AVG_BEND0_1
	,DISTANCE0 		AS DISTANCE0_1
	,WEIGHT0  		AS WEIGHT0_1
	--
	,TRAP1 		AS TRAP1_1
	,VELOCITY1		AS VELOCITY1_1
	,POSITION1		AS POSITION1_1
	,SPLIT1		AS SPLIT1_1
	,AVG_BEND1		AS AVG_BEND1_1
	,DISTANCE1 		AS DISTANCE1_1
	,WEIGHT1  		AS WEIGHT1_1
	--
	,TRAP2		AS TRAP2_1
	,VELOCITY2		AS VELOCITY2_1
	,POSITION2		AS POSITION2_1
	,SPLIT2		AS SPLIT2_1
	,AVG_BEND2		AS AVG_BEND2_1
	,DISTANCE2 		AS DISTANCE2_1
	,WEIGHT2  		AS WEIGHT2_1
	--
	,TRAP3		AS TRAP3_1
	,VELOCITY3		AS VELOCITY3_1
	,POSITION3		AS POSITION3_1
	,SPLIT3		AS SPLIT3_1
	,AVG_BEND3		AS AVG_BEND3_1
	,DISTANCE3 		AS DISTANCE3_1
	,WEIGHT3  		AS WEIGHT3_1
FROM GREYHOUND.V_PREVIOUS_DATA
WHERE TRAP0=1
)
,TRAP2 AS (
SELECT URL_RACING
	,TRAP0 		AS TRAP0_2
	,VELOCITY0 		AS VELOCITY0_2
	,POSITION0		AS POSITION0_2
	,SPLIT0		AS SPLIT0_2
	,AVG_BEND0		AS AVG_BEND0_2
	,DISTANCE0 		AS DISTANCE0_2
	,WEIGHT0  		AS WEIGHT0_2
	--
	,TRAP1 		AS TRAP1_2
	,VELOCITY1		AS VELOCITY1_2
	,POSITION1		AS POSITION1_2
	,SPLIT1		AS SPLIT1_2
	,AVG_BEND1		AS AVG_BEND1_2
	,DISTANCE1 		AS DISTANCE1_2
	,WEIGHT1  		AS WEIGHT1_2
	--
	,TRAP2		AS TRAP2_2
	,VELOCITY2		AS VELOCITY2_2
	,POSITION2		AS POSITION2_2
	,SPLIT2		AS SPLIT2_2
	,AVG_BEND2		AS AVG_BEND2_2
	,DISTANCE2 		AS DISTANCE2_2
	,WEIGHT2  		AS WEIGHT2_2
	--
	,TRAP3		AS TRAP3_2
	,VELOCITY3		AS VELOCITY3_2
	,POSITION3		AS POSITION3_2
	,SPLIT3		AS SPLIT3_2
	,AVG_BEND3		AS AVG_BEND3_2
	,DISTANCE3 		AS DISTANCE3_2
	,WEIGHT3  		AS WEIGHT3_2
FROM GREYHOUND.V_PREVIOUS_DATA
WHERE TRAP0=2
)
,TRAP3 AS (
SELECT URL_RACING
	,TRAP0 		AS TRAP0_3
	,VELOCITY0 		AS VELOCITY0_3
	,POSITION0		AS POSITION0_3
	,SPLIT0		AS SPLIT0_3
	,AVG_BEND0		AS AVG_BEND0_3
	,DISTANCE0 		AS DISTANCE0_3
	,WEIGHT0  		AS WEIGHT0_3
	--
	,TRAP1 		AS TRAP1_3
	,VELOCITY1		AS VELOCITY1_3
	,POSITION1		AS POSITION1_3
	,SPLIT1		AS SPLIT1_3
	,AVG_BEND1		AS AVG_BEND1_3
	,DISTANCE1 		AS DISTANCE1_3
	,WEIGHT1  		AS WEIGHT1_3
	--
	,TRAP2		AS TRAP2_3
	,VELOCITY2		AS VELOCITY2_3
	,POSITION2		AS POSITION2_3
	,SPLIT2		AS SPLIT2_3
	,AVG_BEND2		AS AVG_BEND2_3
	,DISTANCE2 		AS DISTANCE2_3
	,WEIGHT2  		AS WEIGHT2_3
	--
	,TRAP3		AS TRAP3_3
	,VELOCITY3		AS VELOCITY3_3
	,POSITION3		AS POSITION3_3
	,SPLIT3		AS SPLIT3_3
	,AVG_BEND3		AS AVG_BEND3_3
	,DISTANCE3 		AS DISTANCE3_3
	,WEIGHT3  		AS WEIGHT3_3
FROM GREYHOUND.V_PREVIOUS_DATA
WHERE TRAP0=3
)
,TRAP4 AS (
SELECT URL_RACING
	,TRAP0 		AS TRAP0_4
	,VELOCITY0 		AS VELOCITY0_4
	,POSITION0		AS POSITION0_4
	,SPLIT0		AS SPLIT0_4
	,AVG_BEND0		AS AVG_BEND0_4
	,DISTANCE0 		AS DISTANCE0_4
	,WEIGHT0  		AS WEIGHT0_4
	--
	,TRAP1 		AS TRAP1_4
	,VELOCITY1		AS VELOCITY1_4
	,POSITION1		AS POSITION1_4
	,SPLIT1		AS SPLIT1_4
	,AVG_BEND1		AS AVG_BEND1_4
	,DISTANCE1 		AS DISTANCE1_4
	,WEIGHT1  		AS WEIGHT1_4
	--
	,TRAP2		AS TRAP2_4
	,VELOCITY2		AS VELOCITY2_4
	,POSITION2		AS POSITION2_4
	,SPLIT2		AS SPLIT2_4
	,AVG_BEND2		AS AVG_BEND2_4
	,DISTANCE2 		AS DISTANCE2_4
	,WEIGHT2  		AS WEIGHT2_4
	--
	,TRAP3		AS TRAP3_4
	,VELOCITY3		AS VELOCITY3_4
	,POSITION3		AS POSITION3_4
	,SPLIT3		AS SPLIT3_4
	,AVG_BEND3		AS AVG_BEND3_4
	,DISTANCE3 		AS DISTANCE3_4
	,WEIGHT3  		AS WEIGHT3_4
FROM GREYHOUND.V_PREVIOUS_DATA
WHERE TRAP0=4
)
,TRAP5 AS (
SELECT URL_RACING
	,TRAP0 		AS TRAP0_5
	,VELOCITY0 		AS VELOCITY0_5
	,POSITION0		AS POSITION0_5
	,SPLIT0		AS SPLIT0_5
	,AVG_BEND0		AS AVG_BEND0_5
	,DISTANCE0 		AS DISTANCE0_5
	,WEIGHT0  		AS WEIGHT0_5
	--
	,TRAP1 		AS TRAP1_5
	,VELOCITY1		AS VELOCITY1_5
	,POSITION1		AS POSITION1_5
	,SPLIT1		AS SPLIT1_5
	,AVG_BEND1		AS AVG_BEND1_5
	,DISTANCE1 		AS DISTANCE1_5
	,WEIGHT1  		AS WEIGHT1_5
	--
	,TRAP2		AS TRAP2_5
	,VELOCITY2		AS VELOCITY2_5
	,POSITION2		AS POSITION2_5
	,SPLIT2		AS SPLIT2_5
	,AVG_BEND2		AS AVG_BEND2_5
	,DISTANCE2 		AS DISTANCE2_5
	,WEIGHT2  		AS WEIGHT2_5
	--
	,TRAP3		AS TRAP3_5
	,VELOCITY3		AS VELOCITY3_5
	,POSITION3		AS POSITION3_5
	,SPLIT3		AS SPLIT3_5
	,AVG_BEND3		AS AVG_BEND3_5
	,DISTANCE3 		AS DISTANCE3_5
	,WEIGHT3  		AS WEIGHT3_5
FROM GREYHOUND.V_PREVIOUS_DATA
WHERE TRAP0=5
)
,TRAP6 AS (
SELECT URL_RACING
	,TRAP0 		AS TRAP0_6
	,VELOCITY0 		AS VELOCITY0_6
	,POSITION0		AS POSITION0_6
	,SPLIT0		AS SPLIT0_6
	,AVG_BEND0		AS AVG_BEND0_6
	,DISTANCE0 		AS DISTANCE0_6
	,WEIGHT0  		AS WEIGHT0_6
	--
	,TRAP1 		AS TRAP1_6
	,VELOCITY1		AS VELOCITY1_6
	,POSITION1		AS POSITION1_6
	,SPLIT1		AS SPLIT1_6
	,AVG_BEND1		AS AVG_BEND1_6
	,DISTANCE1 		AS DISTANCE1_6
	,WEIGHT1  		AS WEIGHT1_6
	--
	,TRAP2		AS TRAP2_6
	,VELOCITY2		AS VELOCITY2_6
	,POSITION2		AS POSITION2_6
	,SPLIT2		AS SPLIT2_6
	,AVG_BEND2		AS AVG_BEND2_6
	,DISTANCE2 		AS DISTANCE2_6
	,WEIGHT2  		AS WEIGHT2_6
	--
	,TRAP3		AS TRAP3_6
	,VELOCITY3		AS VELOCITY3_6
	,POSITION3		AS POSITION3_6
	,SPLIT3		AS SPLIT3_6
	,AVG_BEND3		AS AVG_BEND3_6
	,DISTANCE3 		AS DISTANCE3_6
	,WEIGHT3  		AS WEIGHT3_6
FROM GREYHOUND.V_PREVIOUS_DATA
WHERE TRAP0=6
)
,ALL_URS_MODEL AS (
SELECT DISTINCT A.URL_RACING
FROM GREYHOUND.V_URL_INFORMATION A
	INNER JOIN GREYHOUND.V_URL_MODEL B ON A.URL_RACING = B.URL_RACING
)
,DATA_BY_RACING AS (
SELECT A.URL_RACING
	--
	--TRAP 1
	,B.DISTANCE0_1,B.DISTANCE1_1,B.DISTANCE2_1,B.DISTANCE3_1
	,B.trap0_1,B.trap1_1,B.trap2_1,B.trap3_1
	,B.velocity0_1,B.velocity1_1,B.velocity2_1,B.velocity3_1
	,B.position0_1,B.position1_1,B.position2_1,B.position3_1
	,B.split0_1,B.split1_1,B.split2_1,B.split3_1
	,B.WEIGHT0_1,B.WEIGHT1_1,B.WEIGHT2_1,B.WEIGHT3_1
	,B.avg_bend0_1,B.avg_bend1_1,B.avg_bend2_1,B.avg_bend3_1
	--
	--TRAP2
	,C.DISTANCE0_2,C.DISTANCE1_2,C.DISTANCE2_2,C.DISTANCE3_2
	,C.trap0_2,C.trap1_2,C.trap2_2,C.trap3_2
	,C.velocity0_2,C.velocity1_2,C.velocity2_2,C.velocity3_2
	,C.position0_2,C.position1_2,C.position2_2,C.position3_2
	,C.split0_2,C.split1_2,C.split2_2,C.split3_2
	,C.WEIGHT0_2,C.WEIGHT1_2,C.WEIGHT2_2,C.WEIGHT3_2
	,C.avg_bend0_2,C.avg_bend1_2,C.avg_bend2_2,C.avg_bend3_2
	--
	--TRAP3
	,D.DISTANCE0_3,D.DISTANCE1_3,D.DISTANCE2_3,D.DISTANCE3_3
	,D.trap0_3,D.trap1_3,D.trap2_3,D.trap3_3
	,D.velocity0_3,D.velocity1_3,D.velocity2_3,D.velocity3_3
	,D.position0_3,D.position1_3,D.position2_3,D.position3_3
	,D.split0_3,D.split1_3,D.split2_3,D.split3_3
	,D.WEIGHT0_3,D.WEIGHT1_3,D.WEIGHT2_3,D.WEIGHT3_3
	,D.avg_bend0_3,D.avg_bend1_3,D.avg_bend2_3,D.avg_bend3_3
	--
	--TRAP4
	,E.DISTANCE0_4,E.DISTANCE1_4,E.DISTANCE2_4,E.DISTANCE3_4
	,E.trap0_4,E.trap1_4,E.trap2_4,E.trap3_4
	,E.velocity0_4,E.velocity1_4,E.velocity2_4,E.velocity3_4
	,E.position0_4,E.position1_4,E.position2_4,E.position3_4
	,E.split0_4,E.split1_4,E.split2_4,E.split3_4
	,E.WEIGHT0_4,E.WEIGHT1_4,E.WEIGHT2_4,E.WEIGHT3_4
	,E.avg_bend0_4,E.avg_bend1_4,E.avg_bend2_4,E.avg_bend3_4
	--
	--TRAP5
	,F.DISTANCE0_5,F.DISTANCE1_5,F.DISTANCE2_5,F.DISTANCE3_5
	,F.trap0_5,F.trap1_5,F.trap2_5,F.trap3_5
	,F.velocity0_5,F.velocity1_5,F.velocity2_5,F.velocity3_5
	,F.position0_5,F.position1_5,F.position2_5,F.position3_5
	,F.split0_5,F.split1_5,F.split2_5,F.split3_5
	,F.WEIGHT0_5,F.WEIGHT1_5,F.WEIGHT2_5,F.WEIGHT3_5
	,F.avg_bend0_5,F.avg_bend1_5,F.avg_bend2_5,F.avg_bend3_5
	--
	--TRAP6
	,G.DISTANCE0_6,G.DISTANCE1_6,G.DISTANCE2_6,G.DISTANCE3_6
	,G.trap0_6,G.trap1_6,G.trap2_6,G.trap3_6
	,G.velocity0_6,G.velocity1_6,G.velocity2_6,G.velocity3_6
	,G.position0_6,G.position1_6,G.position2_6,G.position3_6
	,G.split0_6,G.split1_6,G.split2_6,G.split3_6
	,G.WEIGHT0_6,G.WEIGHT1_6,G.WEIGHT2_6,G.WEIGHT3_6
	,G.avg_bend0_6,G.avg_bend1_6,G.avg_bend2_6,G.avg_bend3_6
	-- response variable
	,CASE WHEN B.position0_1 = 1 THEN 1 ELSE 0 END WIN_TRAP1
	,CASE WHEN C.position0_2 = 1 THEN 1 ELSE 0 END WIN_TRAP2
	,CASE WHEN D.position0_3 = 1 THEN 1 ELSE 0 END WIN_TRAP3
	,CASE WHEN E.position0_4 = 1 THEN 1 ELSE 0 END WIN_TRAP4
	,CASE WHEN F.position0_5 = 1 THEN 1 ELSE 0 END WIN_TRAP5
	,CASE WHEN G.position0_6 = 1 THEN 1 ELSE 0 END WIN_TRAP6
FROM ALL_URS_MODEL A
	LEFT JOIN TRAP1 B ON A.URL_RACING = B.URL_RACING
	LEFT JOIN TRAP2 C ON A.URL_RACING = C.URL_RACING
	LEFT JOIN TRAP3 D ON A.URL_RACING = D.URL_RACING
	LEFT JOIN TRAP4 E ON A.URL_RACING = E.URL_RACING
	LEFT JOIN TRAP5 F ON A.URL_RACING = F.URL_RACING
	LEFT JOIN TRAP6 G ON A.URL_RACING = G.URL_RACING
)
SELECT A.*
	,B.START_ODD_1
	,B.START_ODD_2
	,B.START_ODD_3
	,B.START_ODD_4
	,B.START_ODD_5
	,B.START_ODD_6
FROM DATA_BY_RACING A
 	LEFT JOIN GREYHOUND.V_ODD_INFORMATION B ON A.URL_RACING = B.URL_RACING
;








